{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mert/Desktop/I\\u0307s\\u0327/lyrics/pages/p/[id].js\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/AppLayout';\nimport React from \"react\";\nimport fetch from 'isomorphic-unfetch';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport axios from \"axios\";\nimport { NextSeo } from 'next-seo';\n\nvar Song =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Song, _React$Component);\n\n  function Song(props) {\n    var _this;\n\n    _classCallCheck(this, Song);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Song).call(this, props));\n    var songId = _this.props.id;\n    _this.state = {\n      song: {\n        \"name\": \"Sunucu bekleniyor!\",\n        \"lyrics\": \"Görüntülemek istediğiniz şarkı sunucudan getiriliyor...\",\n        \"artist\": {\n          \"name\": \"-\"\n        }\n      },\n      id: songId\n    };\n    return _this;\n  }\n\n  _createClass(Song, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.getSongs();\n      this.timerID = setInterval(function () {\n        return _this2.tick();\n      }, 3000);\n    }\n  }, {\n    key: \"tick\",\n    value: function tick() {\n      var currentId = window.location.href.substring(window.location.href.lastIndexOf('/') + 1);\n\n      if (currentId != this.state.id) {\n        this.setState({\n          id: currentId\n        });\n        this.getSongs();\n      }\n    }\n  }, {\n    key: \"getSongs\",\n    value: function getSongs() {\n      var _this3 = this;\n\n      var url = 'http://127.0.0.1:8000/api/songs/' + this.state.id;\n      axios.get(url).then(function (res) {\n        var songData = res.data;\n\n        _this3.setState({\n          song: songData\n        });\n      });\n      if (this.state.song.name === \"Sunucu bekleniyor!\") this.setState({\n        song: {\n          \"name\": \"Sonuç bulunamadı!\",\n          \"lyrics\": \"Sistemde bu şarkı yok gibi gözüküyor.\",\n          \"artist\": {\n            \"name\": \"-\"\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, __jsx(NextSeo, {\n        title: this.state.song.name + ' Şarkı Sözleri',\n        description: this.state.song.artist.name + ' - ' + this.state.song.name + ' şarkı sözleri. Aradığınız şarkının sözleri işte burada.',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"container\",\n        style: {\n          paddingTop: '3%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.state.song.name), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, ReactHtmlParser(this.state.song.lyrics)), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), __jsx(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Sanat\\xE7\\u0131: \"), \" \", this.state.song.artist.name))));\n    }\n  }]);\n\n  return Song;\n}(React.Component);\n\nSong.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var id;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = context.query.id;\n            return _context.abrupt(\"return\", {\n              id: id\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Song;","map":{"version":3,"sources":["/Users/mert/Desktop/İş/lyrics/pages/p/[id].js"],"names":["Layout","React","fetch","ReactHtmlParser","processNodes","convertNodeToElement","htmlparser2","axios","NextSeo","Song","props","songId","id","state","song","getSongs","timerID","setInterval","tick","currentId","window","location","href","substring","lastIndexOf","setState","url","get","then","res","songData","data","name","artist","paddingTop","lyrics","Component","getInitialProps","context","query"],"mappings":"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","sourcesContent":["import Layout from '../../components/AppLayout';\nimport React from \"react\";\nimport fetch from 'isomorphic-unfetch';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport axios from \"axios\";\nimport { NextSeo } from 'next-seo';\n\nclass Song extends React.Component{\n    constructor(props){\n        super(props);\n\n        const songId = this.props.id;\n\n        this.state = {\n            song: {\n                \"name\": \"Sunucu bekleniyor!\",\n                \"lyrics\": \"Görüntülemek istediğiniz şarkı sunucudan getiriliyor...\",\n                \"artist\": {\n                    \"name\": \"-\"\n                }\n            },\n            id: songId\n        };\n    }\n    componentDidMount() {\n        this.getSongs();\n        this.timerID = setInterval(\n            () => this.tick(),\n            3000\n        );\n    }\n    tick(){\n        let currentId = window.location.href.substring(window.location.href.lastIndexOf('/') + 1);\n\n        if (currentId!=this.state.id){\n            this.setState({\n                id: currentId\n            });\n            this.getSongs();\n        }\n    }\n    getSongs(){\n        var url = 'http://127.0.0.1:8000/api/songs/'+this.state.id;\n        axios.get(url)\n            .then(res => {\n                const songData = res.data;\n                this.setState({\n                    song : songData\n                });\n            });\n        if (this.state.song.name===\"Sunucu bekleniyor!\") this.setState({\n            song: {\n                \"name\": \"Sonuç bulunamadı!\",\n                \"lyrics\": \"Sistemde bu şarkı yok gibi gözüküyor.\",\n                \"artist\": {\n                    \"name\": \"-\"\n                }\n            }\n        });\n    }\n    render() {\n        return (\n            <Layout>\n                <NextSeo\n                    title={this.state.song.name+' Şarkı Sözleri'}\n                    description={this.state.song.artist.name + ' - ' + this.state.song.name+' şarkı sözleri. Aradığınız şarkının sözleri işte burada.'}\n                />\n                <div className=\"container\" style={{ paddingTop:'3%'}}>\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <h1>{this.state.song.name}</h1>\n                            <hr/>\n                            <p>\n                                {ReactHtmlParser(this.state.song.lyrics)}\n                            </p>\n                            <hr/>\n                            <b>Sanatçı: </b> {this.state.song.artist.name}\n                        </div>\n                    </div>\n                </div>\n            </Layout>\n        );\n    }\n}\n\nSong.getInitialProps = async function(context) {\n\n    const {id} = context.query;\n\n    return {id};\n\n};\n\nexport default Song;"]},"metadata":{},"sourceType":"module"}