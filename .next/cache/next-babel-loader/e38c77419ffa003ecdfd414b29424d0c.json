{"ast":null,"code":"var _jsxFileName = \"/Users/mert/Desktop/I\\u0307s\\u0327/lyrics/pages/p/[id].js\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/AppLayout';\nimport React from \"react\";\nimport fetch from 'isomorphic-unfetch';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport axios from \"axios\";\nimport { NextSeo } from 'next-seo';\n\nclass Song extends React.Component {\n  constructor(props) {\n    super(props);\n    const songId = this.props.id;\n    this.state = {\n      song: {\n        \"name\": \"Sunucu bekleniyor!\",\n        \"lyrics\": \"Görüntülemek istediğiniz şarkı sunucudan getiriliyor...\",\n        \"artist\": {\n          \"name\": \"-\"\n        }\n      },\n      id: songId\n    };\n  }\n\n  componentDidMount() {\n    this.getSongs();\n    this.timerID = setInterval(() => this.tick(), 3000);\n  }\n\n  tick() {\n    let currentId = window.location.href.substring(window.location.href.lastIndexOf('/') + 1);\n\n    if (currentId != this.state.id) {\n      this.setState({\n        id: currentId\n      });\n      this.getSongs();\n    }\n  }\n\n  getSongs() {\n    var url = 'http://127.0.0.1:8000/api/songs/' + this.state.id;\n    axios.get(url).then(res => {\n      const songData = res.data;\n      this.setState({\n        song: songData\n      });\n    });\n    if (this.state.song.name === \"Sunucu bekleniyor!\") this.setState({\n      song: {\n        \"name\": \"Sonuç bulunamadı!\",\n        \"lyrics\": \"Sistemde bu şarkı yok gibi gözüküyor.\",\n        \"artist\": {\n          \"name\": \"-\"\n        }\n      }\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, __jsx(NextSeo, {\n      title: this.state.song.name + ' Şarkı Sözleri',\n      description: this.state.song.artist.name + ' - ' + this.state.song.name + ' şarkı sözleri. Aradığınız şarkının sözleri işte burada.',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"container\",\n      style: {\n        paddingTop: '3%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.song.name), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, ReactHtmlParser(this.state.song.lyrics)), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), __jsx(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Sanat\\xE7\\u0131: \"), \" \", this.state.song.artist.name))));\n  }\n\n}\n\nSong.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  return {\n    id\n  };\n};\n\nexport default Song;","map":{"version":3,"sources":["/Users/mert/Desktop/İş/lyrics/pages/p/[id].js"],"names":["Layout","React","fetch","ReactHtmlParser","processNodes","convertNodeToElement","htmlparser2","axios","NextSeo","Song","Component","constructor","props","songId","id","state","song","componentDidMount","getSongs","timerID","setInterval","tick","currentId","window","location","href","substring","lastIndexOf","setState","url","get","then","res","songData","data","name","render","artist","paddingTop","lyrics","getInitialProps","context","query"],"mappings":"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","sourcesContent":["import Layout from '../../components/AppLayout';\nimport React from \"react\";\nimport fetch from 'isomorphic-unfetch';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport axios from \"axios\";\nimport { NextSeo } from 'next-seo';\n\nclass Song extends React.Component{\n    constructor(props){\n        super(props);\n\n        const songId = this.props.id;\n\n        this.state = {\n            song: {\n                \"name\": \"Sunucu bekleniyor!\",\n                \"lyrics\": \"Görüntülemek istediğiniz şarkı sunucudan getiriliyor...\",\n                \"artist\": {\n                    \"name\": \"-\"\n                }\n            },\n            id: songId\n        };\n    }\n    componentDidMount() {\n        this.getSongs();\n        this.timerID = setInterval(\n            () => this.tick(),\n            3000\n        );\n    }\n    tick(){\n        let currentId = window.location.href.substring(window.location.href.lastIndexOf('/') + 1);\n\n        if (currentId!=this.state.id){\n            this.setState({\n                id: currentId\n            });\n            this.getSongs();\n        }\n    }\n    getSongs(){\n        var url = 'http://127.0.0.1:8000/api/songs/'+this.state.id;\n        axios.get(url)\n            .then(res => {\n                const songData = res.data;\n                this.setState({\n                    song : songData\n                });\n            });\n        if (this.state.song.name===\"Sunucu bekleniyor!\") this.setState({\n            song: {\n                \"name\": \"Sonuç bulunamadı!\",\n                \"lyrics\": \"Sistemde bu şarkı yok gibi gözüküyor.\",\n                \"artist\": {\n                    \"name\": \"-\"\n                }\n            }\n        });\n    }\n    render() {\n        return (\n            <Layout>\n                <NextSeo\n                    title={this.state.song.name+' Şarkı Sözleri'}\n                    description={this.state.song.artist.name + ' - ' + this.state.song.name+' şarkı sözleri. Aradığınız şarkının sözleri işte burada.'}\n                />\n                <div className=\"container\" style={{ paddingTop:'3%'}}>\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <h1>{this.state.song.name}</h1>\n                            <hr/>\n                            <p>\n                                {ReactHtmlParser(this.state.song.lyrics)}\n                            </p>\n                            <hr/>\n                            <b>Sanatçı: </b> {this.state.song.artist.name}\n                        </div>\n                    </div>\n                </div>\n            </Layout>\n        );\n    }\n}\n\nSong.getInitialProps = async function(context) {\n\n    const {id} = context.query;\n\n    return {id};\n\n};\n\nexport default Song;"]},"metadata":{},"sourceType":"module"}